version: 0.2

phases:
  install:
    commands:
      - set -euxo pipefail
      - echo "Install JDK 17 & Maven if needed"
      - yum -y install java-17-amazon-corretto-headless maven || (apt-get update && apt-get -y install openjdk-17-jdk maven)
      - mvn -v || true

  build:
    commands:
      - set -euxo pipefail
      - echo "Detect project dir"
      - |
        PROJECT_DIR="$(find . -maxdepth 3 -type f -name pom.xml -printf '%h\n' | head -n1)"
        if [ -z "$PROJECT_DIR" ]; then echo "No pom.xml found"; exit 1; fi
        echo "Building in: $PROJECT_DIR"
        mvn -B -DskipTests -f "$PROJECT_DIR/pom.xml" clean package
      - |
        # Save jar path for this phase (for debugging)
        if ls "$PROJECT_DIR/target"/*.jar >/dev/null 2>&1; then
          JAR_PATH="$(ls -1 "$PROJECT_DIR/target"/*.jar | head -n1)"
          echo "Built JAR (build phase): $JAR_PATH"
        else
          echo "No JAR produced"; exit 1
        fi

  post_build:
    commands:
      - set -euxo pipefail
      - echo "Bundle artifacts for CodeDeploy"
      - |
        # Recompute locations (phases don't share shell vars)
        PROJECT_DIR="$(find . -maxdepth 3 -type f -name pom.xml -printf '%h\n' | head -n1)"
        [ -n "$PROJECT_DIR" ] || { echo "No pom.xml found in post_build"; exit 1; }
        JAR_PATH="$(ls -1 "$PROJECT_DIR/target"/*.jar | head -n1)"
        [ -n "$JAR_PATH" ] || { echo "JAR not found in post_build"; exit 1; }
        echo "Using JAR: $JAR_PATH"
      - mkdir -p artifact/app/build/libs artifact/app/public
      - cp "$JAR_PATH" artifact/app/build/libs/app.jar
      - cp -r appspec.yml scripts systemd artifact/
      - printf '{"commit":"%s","builtAt":"%s"}' "$CODEBUILD_RESOLVED_SOURCE_VERSION" "$(date -u +%FT%TZ)" > artifact/app/public/build.json

artifacts:
  files:
    - appspec.yml
    - scripts/**/*
    - systemd/**/*
    - app/build/libs/app.jar
    - app/public/build.json
  base-directory: artifact
