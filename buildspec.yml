version: 0.2

phases:
  install:
    commands:
      - |
        set -e
        if ! command -v mvn >/dev/null 2>&1; then
          yum -y install maven || (apt-get update && apt-get -y install maven)
        fi
        mvn -version || true
        java -version || true

  pre_build:
    commands:
      - |
        set -e
        # 1) 먼저 app/ 아래를 시도 (원래 의도)
        PROJECT_DIR="app"
        if [ ! -f "$PROJECT_DIR/pom.xml" ]; then
          echo "pom not found at $PROJECT_DIR/pom.xml, probing..."
          # 2) 자주 나오는 대체 경로들을 시도
          for d in . springboot-ec2-cicd-demo springboot-ec2-cicd-demo/app src; do
            if [ -f "$d/pom.xml" ]; then PROJECT_DIR="$d"; break; fi
            if [ -f "$d/app/pom.xml" ]; then PROJECT_DIR="$d/app"; break; fi
          done
          # 3) 그래도 못 찾으면 전체 검색
          if [ ! -f "$PROJECT_DIR/pom.xml" ]; then
            POM="$(find . -type f -name pom.xml ! -path '*/target/*' -print -quit || true)"
            if [ -n "$POM" ]; then PROJECT_DIR="$(dirname "$POM")"; fi
          fi
        fi
        if [ ! -f "$PROJECT_DIR/pom.xml" ]; then
          echo "pom.xml not found anywhere. workspace snapshot:"
          pwd; ls -la
          echo "--- top 3 levels ---"; find . -maxdepth 3 -print
          exit 1
        fi
        echo "$PROJECT_DIR" > /tmp/PROJECT_DIR
        echo "PROJECT_DIR=$PROJECT_DIR"

  build:
    commands:
      - |
        set -e
        PROJECT_DIR="$(cat /tmp/PROJECT_DIR)"
        echo "Building with $PROJECT_DIR/pom.xml"
        mvn -B -DskipTests -f "$PROJECT_DIR/pom.xml" clean package
        JAR="$(ls -1 "$PROJECT_DIR/target"/*.jar 2>/dev/null | grep -v -E '(-sources|-javadoc|-original)\.jar$' | head -n1 || true)"
        if [ -z "$JAR" ]; then
          echo "jar not found under $PROJECT_DIR/target"; ls -la "$PROJECT_DIR/target" || true
          exit 1
        fi
        echo "$JAR" > /tmp/JAR
        echo "JAR=$JAR"

  post_build:
    commands:
      - |
        set -e
        JAR="$(cat /tmp/JAR)"
        mkdir -p artifact/app/build/libs artifact/app/public
        cp "$JAR" artifact/app/build/libs/app.jar
        [ -f appspec.yml ] && cp appspec.yml artifact/ || true
        [ -d scripts ] && cp -r scripts artifact/ || true
        [ -d systemd ] && cp -r systemd artifact/ || true
        printf '{"commit":"%s","builtAt":"%s"}' "$CODEBUILD_RESOLVED_SOURCE_VERSION" "$(date -u +%FT%TZ)" > artifact/app/public/build.json
        echo "artifact tree:"; find artifact -type f -print

artifacts:
  files:
    - appspec.yml
    - scripts/**/*
    - systemd/**/*
    - app/build/libs/app.jar
    - app/public/build.json
  base-directory: artifact
