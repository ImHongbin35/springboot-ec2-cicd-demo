version: 0.2

phases:
  install:
    runtime-versions:
      java: corretto17
    commands:
      - |
        set -euxo pipefail
        echo "Install Maven if missing"
        if ! command -v mvn >/dev/null 2>&1; then
          yum -y install maven || (apt-get update && apt-get -y install maven)
        fi
        mvn -version

  pre_build:
    commands:
      - |
        set -euxo pipefail
        echo "=== TOP-LEVEL LIST ==="; ls -la
        echo "=== TOP 3-LEVEL TREE ==="; find . -maxdepth 3 -print | sed -n '1,200p'
        # 1) 흔한 후보 경로 먼저 시도
        PROJECT_DIR=""
        for d in . app src springboot-ec2-cicd-demo springboot-ec2-cicd-demo/app; do
          if [ -f "$d/pom.xml" ]; then PROJECT_DIR="$d"; break; fi
        done
        # 2) 그래도 못 찾으면 전체 검색
        if [ -z "${PROJECT_DIR}" ]; then
          POM="$(find . -type f -name pom.xml ! -path '*/target/*' -print -quit || true)"
          if [ -n "${POM}" ]; then PROJECT_DIR="$(dirname "$POM")"; fi
        fi
        if [ -z "${PROJECT_DIR}" ]; then
          echo "❌ pom.xml not found anywhere under workspace"
          exit 1
        fi
        echo "✅ PROJECT_DIR=${PROJECT_DIR}"
        printf 'export PROJECT_DIR=%q\n' "$PROJECT_DIR" > /tmp/build_vars.sh

  build:
    commands:
      - |
        set -euxo pipefail
        source /tmp/build_vars.sh
        echo "Building with pom: ${PROJECT_DIR}/pom.xml"
        mvn -B -DskipTests -f "${PROJECT_DIR}/pom.xml" clean package
        # pick the main app jar (exclude sources/javadoc/original)
        JAR_PATH="$(ls -1 "${PROJECT_DIR}/target"/*.jar 2>/dev/null | grep -v -E '(-sources|-javadoc|-original)\.jar$' | head -n1 || true)"
        if [ -z "${JAR_PATH}" ]; then
          echo "❌ JAR not found under ${PROJECT_DIR}/target"
          ls -la "${PROJECT_DIR}/target" || true
          exit 1
        fi
        echo "✅ JAR_PATH=${JAR_PATH}"
        printf 'export JAR_PATH=%q\n' "$JAR_PATH" >> /tmp/build_vars.sh

  post_build:
    commands:
      - |
        set -euxo pipefail
        source /tmp/build_vars.sh
        echo "Bundling artifacts"
        mkdir -p artifact/app/build/libs artifact/app/public
        cp "${JAR_PATH}" artifact/app/build/libs/app.jar
        [ -f appspec.yml ] && cp appspec.yml artifact/ || echo "⚠️ appspec.yml not found"
        [ -d scripts ] && cp -r scripts artifact/ || echo "⚠️ scripts/ not found"
        [ -d systemd ] && cp -r systemd artifact/ || echo "⚠️ systemd/ not found"
        printf '{"commit":"%s","builtAt":"%s"}' "$CODEBUILD_RESOLVED_SOURCE_VERSION" "$(date -u +%FT%TZ)" > artifact/app/public/build.json
        echo "=== ARTIFACT TREE ==="; find artifact -type f -print

artifacts:
  files:
    - appspec.yml
    - scripts/**/*
    - systemd/**/*
    - app/build/libs/app.jar
    - app/public/build.json
  base-directory: artifact
