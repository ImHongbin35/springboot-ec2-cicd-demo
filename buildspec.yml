version: 0.2

phases:
  install:
    runtime-versions:
      java: corretto17
    commands:
      - |
        set -euxo pipefail
        echo "Install Maven if missing"
        if ! command -v mvn >/dev/null 2>&1; then
          yum -y install maven || (apt-get update && apt-get -y install maven)
        fi
        mvn -version

  pre_build:
    commands:
      - |
        set -euxo pipefail
        # pom.xml이 어디에 있든 한 번만 정확히 찾기 (루트/app/한폴더 더 위 모두 대응)
        PROJECT_DIR="$(dirname "$(find . -type f -name pom.xml ! -path '*/target/*' | head -n1)")"
        if [ -z "${PROJECT_DIR:-}" ]; then
          echo "❌ pom.xml not found in workspace"; find . -maxdepth 3 -type d -print; exit 1
        fi
        echo "✅ PROJECT_DIR=${PROJECT_DIR}"
        printf 'export PROJECT_DIR=%q\n' "$PROJECT_DIR" > /tmp/build_vars.sh

  build:
    commands:
      - |
        set -euxo pipefail
        source /tmp/build_vars.sh
        echo "Building with pom: ${PROJECT_DIR}/pom.xml"
        mvn -B -DskipTests -f "${PROJECT_DIR}/pom.xml" clean package
        # 메인 JAR만 선택 (sources/javadoc/original 제외)
        JAR_PATH="$(find "${PROJECT_DIR}/target" -maxdepth 1 -type f -name '*.jar' \
          ! -name '*-sources.jar' ! -name '*-javadoc.jar' ! -name '*-original.jar' | head -n1 || true)"
        if [ -z "${JAR_PATH:-}" ]; then
          echo "❌ JAR not found under ${PROJECT_DIR}/target"
          ls -la "${PROJECT_DIR}/target" || true
          exit 1
        fi
        echo "✅ JAR_PATH=${JAR_PATH}"
        printf 'export JAR_PATH=%q\n' "$JAR_PATH" >> /tmp/build_vars.sh

  post_build:
    commands:
      - |
        set -euxo pipefail
        source /tmp/build_vars.sh
        echo "Bundling artifacts"
        mkdir -p artifact/app/build/libs artifact/app/public
        cp "${JAR_PATH}" artifact/app/build/libs/app.jar
        # 보조 파일들(있으면 복사)
        [ -f appspec.yml ] && cp appspec.yml artifact/ || echo "⚠️ appspec.yml not found"
        [ -d scripts ] && cp -r scripts artifact/ || echo "⚠️ scripts/ not found"
        [ -d systemd ] && cp -r systemd artifact/ || echo "⚠️ systemd/ not found"
        printf '{"commit":"%s","builtAt":"%s"}' "$CODEBUILD_RESOLVED_SOURCE_VERSION" "$(date -u +%FT%TZ)" > artifact/app/public/build.json
        echo "Artifact tree:"; find artifact -type f -print

artifacts:
  files:
    - appspec.yml
    - scripts/**/*
    - systemd/**/*
    - app/build/libs/app.jar
    - app/public/build.json
  base-directory: artifact
